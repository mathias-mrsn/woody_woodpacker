#ifndef EXPLOIT_H
#define EXPLOIT_H

#include <stdlib.h>
#include <string.h>
#include <elf.h>
#include "stored_file.h"

enum
{
    x32 = 1,
    x64
};

typedef struct sELF64_FORMAT
{
    /**
     * elf header
     */
    Elf64_Ehdr *e_h;
    /**
     * program header / segment header
     */
    Elf64_Phdr *p_h;
    /**
     * section header
     */
    Elf64_Shdr *s_h;

} ELF64_FORMAT;

typedef struct sELF32_FORMAT
{
    /**
     * elf header
     */
    Elf32_Ehdr *e_h;
    /**
     * program header / segment header
     */
    Elf32_Phdr *p_h;
    /**
     * section header
     */
    Elf32_Shdr *s_h;

} ELF32_FORMAT;

typedef struct sELF_FORMAT
{
    /**
     * elf header
     */
    void *e_h;
    /**
     * program header / segment header
     */
    void *p_h;
    /**
     * section header
     */
    void *s_h;

} ELF_FORMAT;

void elf_exploit(const STORED_FILE *sf, int bin_arch);

/**
 * @brief
 */
int get_text_section(const STORED_FILE *sf, const ELF64_FORMAT *elf);
int find_text_segment(const STORED_FILE *sf, const ELF64_FORMAT *elf, int32_t idx);

#endif